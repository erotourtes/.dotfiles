# Read `man 5 sway` for a complete reference.



### --------- ###
### Variables ###
### --------- ###
set $mod Mod4
set $left h
set $down j
set $up k
set $right l

set $display_primary HDMI-A-1
set $display_secondary eDP-1

set $color_bg #2D2D2D
set $color_bg_dark #141414
set $color_yellow #E3AE2D
set $color_yellow_dark #a88120
set $color_fg_dark #4B4C4D
set $color_fg #ECF0F1



### -------------------- ###
### Output configuration ###
### -------------------- ###
# You can get the names of your outputs by running: swaymsg -t get_outputs

output $display_primary resolution 1920x1080 position 0,0
output $display_secondary pos 0 1080 res 1920x1080 scale 1

exec_always ~/.config/sway/monitor.bash

# output $display_primary bg `fd -t f . ~/Pictures/Wallpapers/ | shuf -n 1` fill
# output $display_secondary bg ~/Pictures/Wallpapers/028.jpg fill
output $display_primary bg ~/Pictures/Wallpapers/029.jpg fill
output $display_secondary bg ~/Pictures/Wallpapers/006.jpg fill



### --------------------- ###
### Workspace to displays ###
### --------------------- ###
workspace 1 output  $display_primary
workspace 2 output  $display_primary
workspace 3 output  $display_primary
workspace 4 output  $display_primary
workspace 5 output  $display_primary

workspace 6 output  $display_secondary
workspace 7 output  $display_secondary
workspace 8 output  $display_secondary
workspace 9 output  $display_secondary
workspace 10 output $display_secondary



### ------------------- ###
### Idle configuration  ###
### ------------------- ###
# This will lock your screen after 1800 seconds of inactivity, then turn off
# your displays after another 1800 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 1800 'swaylock -f -c 000000' \
         timeout 3600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock -f -c 000000'



### ------------------- ###
### Input configuration ###
### ------------------- ###
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
# Read `man xkeyboard-config`
input type:touchpad {
    dwt disabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
    accel_profile "adaptive"
    pointer_accel 0.35
}

input type:keyboard {
    repeat_delay 220
    repeat_rate 30
    xkb_layout us,ua
    # xkb_options "altwin:swap_lalt_lwin,caps:escape,grp:win_space_toggle"
    # xkb_options "altwin:swap_lalt_lwin,caps:escape,grp:ctrl_space_toggle"
    xkb_options "altwin:swap_lalt_lwin,caps:escape,grp:ctrls_toggle"
}



### ----------- ###
### Keybindings ###
### ----------- ###
bindsym --inhibited --to-code {
  # $mod+Return exec alacritty --working-directory ~/
  $mod+Return exec kitty
  $mod+Shift+q kill

### ---- ###
### Rofi ###
### ---- ###
  $mod+d exec ~/.config/sway/rofi.fish
  $mod+ctrl+d exec ~/.config/hypr/scripts/RofiEmoji.sh
  $mod+shift+v exec ~/.config/hypr/scripts/ClipManager.sh
  $mod+Shift+d exec sh ~/.config/sway/rofi-window-switcher.sh
  $mod+Shift+f exec fish ~/.config/sway/rofi-zoxide-query.fish

  $mod+Shift+e exec swaynag -t warning -m 'Log out?' -B 'Yes, exit sway' 'swaymsg exit'
  $mod+Shift+c reload
  $mod+Shift+s exec systemctl suspend
  $mod+Shift+w exec swaylock -f -c 000000

### ----------------- ###
### Window management ###
### ----------------- ###
  $mod+$left focus left
  $mod+$down focus down
  $mod+$up focus up
  $mod+$right focus right

  $mod+Shift+$left move left
  $mod+Shift+$down move down
  $mod+Shift+$up move up
  $mod+Shift+$right move right

### ---------- ###
### Workspaces ###
### ---------- ###
  $mod+1 workspace number 1
  $mod+2 workspace number 2
  $mod+3 workspace number 3
  $mod+4 workspace number 4
  $mod+5 workspace number 5
  $mod+6 workspace number 6
  $mod+7 workspace number 7
  $mod+8 workspace number 8
  $mod+9 workspace number 9
  $mod+0 workspace number 10

  $mod+Shift+1 move container to workspace number 1
  $mod+Shift+2 move container to workspace number 2
  $mod+Shift+3 move container to workspace number 3
  $mod+Shift+4 move container to workspace number 4
  $mod+Shift+5 move container to workspace number 5
  $mod+Shift+6 move container to workspace number 6
  $mod+Shift+7 move container to workspace number 7
  $mod+Shift+8 move container to workspace number 8
  $mod+Shift+9 move container to workspace number 9
  $mod+Shift+0 move container to workspace number 10

### ------------ ###
### Layout stuff ###
### ------------ ###
  $mod+g splith
  $mod+v splitv

  # Switch the current container between different layout styles
  $mod+s layout stacking
  $mod+w layout tabbed
  $mod+e layout toggle split

  $mod+f fullscreen

  # Toggle the current focus between tiling and floating mode
  $mod+Shift+space floating toggle

  # Swap focus between the tiling area and the floating area
  $mod+space focus mode_toggle

  # Move focus to the parent container
  $mod+a focus parent

### ---------- ###
### Scratchpad ###
### ---------- ###
  # Move the currently focused window to the scratchpad
  $mod+minus move scratchpad

  # Show the next scratchpad window or hide the focused scratchpad window.
  # If there are multiple scratchpad windows, this command cycles through them.
  $mod+Shift+minus scratchpad show
}



### ------- ###
### General ###
### ------- ###
floating_modifier $mod normal

default_border pixel
smart_borders on
# hide_edge_borders --i3

# gaps inner 7
# gaps outer 1



### -------------------- ###
### App to the workspace ###
### -------------------- ###
# to get the app_id of an app, run: swaymsg -t get_tree
assign [app_id="jetbrains-idea"] workspace number 1
assign [app_id="firefox"] workspace number 2
assign [class="Google-chrome"] workspace number 2
assign [app_id="org.telegram.desktop"] workspace number 10
assign [class="huiontablet"] workspace number 6
assign [class="obsidian"] workspace number 4

for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0



### ------------------- ###
### Resizing containers ###
### ------------------- ###
bindsym --to-code $mod+r mode "resize"
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}



### ---------- ###
### Status Bar ###
### ---------- ###
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom

    # diable vertical scrolling
    bindsym button4 nop
    bindsym button5 nop
    # diable horizontal scrolling
    bindsym button6 nop
    bindsym button7 nop

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while ~/.config/sway/status.sh; do sleep 1; done

    colors {
        statusline $color_fg
        background $color_bg_dark
        inactive_workspace $color_bg_dark $color_bg_dark $color_fg_dark
        active_workspace $color_yellow_dark $color_bg_dark $color_fg_dark
        focused_workspace $color_yellow $color_yellow $color_fg_dark
    }
}

#                       color of bar in tabbed mode
#client.<class>         <border>        <background>          <text>        <indicator>          <child_border>
client.focused          "$color_yellow" "$color_yellow_dark"  "$color_fg"   "$color_yellow_dark" "$color_yellow"
client.focused_inactive "$color_yellow" "$color_bg_dark"      "$color_fg"   "$color_yellow_dark" "$color_yellow"
# client.unfocused        "$color_bg"     "$color_bg_dark"      "$color_fg"   "$color_yellow_dark" "$color_yellow"



### ----- ###
### Other ###
### ----- ###
bindsym --locked {
  XF86MonBrightnessDown exec brightnessctl set 5%-
  XF86MonBrightnessUp exec brightnessctl set 5%+
}

bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%

# Mute/Unmute Microphone
bindsym --to-code {
  XF86AudioMicMute exec amixer set Capture toggle
  $mod+m exec amixer set Capture toggle
}

# Media Playback Controls
bindsym --to-code {
  $mod+u exec playerctl play-pause
  $mod+n exec playerctl next
  $mod+p exec playerctl previous
}

bindsym {
  Print exec --no-startup-id fish -c "flameshot gui"
  shift+Print exec --no-startup-id fish -c "grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | wl-copy -t image/png"
  shift+ctrl+Print exec --no-startup-id fish -c 'set -l path "$(xdg-user-dir PICTURES)/Screenshots/$(date +"screen_screenshot_%Y-%m-%d-%H%M%S.png")"; grim -o $(swaymsg -t get_outputs | jq -r ".[] | select(.focused) | .name") - | wl-copy -t image/png; wl-paste > "$path"; set -l res $(notify-send "Screenshot copied to clipboard" --action="Open"); if test "$res" -eq 0; open "$path"; end'
  ctrl+Print exec --no-startup-id fish ~/.config/sway/capture-active.fish
}
bindsym --to-code $mod+o exec ~/.config/sway/open-clipboard-image.bash

bindsym --to-code {
  $mod+Shift+n exec swaync-client -t -sw
  $mod+Shift+u exec ~/.config/sway/spanish.bash
}



### ------- ###
### Startup ###
### ------- ###
exec systemctl --user import-environment WAYLAND_DISPLAY DISPLAY XDG_CURRENT_DESKTOP SWAYSOCK I3SOCK XCURSOR_SIZE XCURSOR_THEME

exec wl-paste --type text --watch cliphist store
exec wl-paste --type image --watch cliphist store

exec firefox

# Notification Daemon
exec swaync

exec fish -c "xremap ~/.config/xremap/config.yml"



include /etc/sway/config.d/*
